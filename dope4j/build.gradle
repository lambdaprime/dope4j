// include xfunction for updateVersion
buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath "io.github.lambdaprime:id.xfunction:14.0"
  }
}

plugins {
  id 'com.diffplug.spotless'
  id 'java-library'
}

apply plugin : 'eclipse'

def releaseFileName = "${projectName}-v${version}.zip"
  
dependencies {
  api "io.github.lambdaprime:id.xfunction:21.0-SNAPSHOT"
  api "io.github.lambdaprime:matcv:3.0-SNAPSHOT"
  api "org.openpnp:opencv:4.6.0-0"

  def djlVersion = "0.20.0"
  api "ai.djl.pytorch:pytorch-jni:1.13.0-${djlVersion}"
  api "ai.djl:api:${djlVersion}"
  api "ai.djl.pytorch:pytorch-engine:${djlVersion}"
  api "ai.djl.opencv:opencv:${djlVersion}"
  api("ai.djl.onnxruntime:onnxruntime-engine:${djlVersion}") {
    exclude group: "com.microsoft.onnxruntime", module: "onnxruntime"
  }
  api "com.microsoft.onnxruntime:onnxruntime_gpu:1.12.1"
  api "ai.djl.pytorch:pytorch-native-cu117:1.13.0:linux-x86_64"
  api "org.slf4j:slf4j-api:1.7.36"
  api "io.opentelemetry:opentelemetry-api:1.22.0"
}

jar {
  manifest { 
    attributes 'Implementation-Version': "${rootProject.version}"
  }
}

javadoc {
  options.noTimestamp = true
  options.noQualifiers = ["all"]
  options.noTree = true
  options.noIndex = true
  options.noNavBar = true
  options.overview = "src/overview.html"
  // ignore missing @return, @param etc
  options.addBooleanOption('Xdoclint:all,-missing', true)
  exclude 'id/dope4j/impl/**'
}

task createRelease(type: Copy) {
  def out = 'release'
  from jar.archiveFile
  into out
}

task cleanRelease(type: Delete) {
  delete "$projectDir/release/*-SNAPSHOT.zip"
}

assemble.dependsOn createRelease
clean.dependsOn cleanRelease

// run spotless and format code before the build
classes.dependsOn spotlessApply
